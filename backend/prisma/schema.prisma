generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String   // Should be hashed in production
  role      UserRole
  firstName String
  lastName  String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lastLogin DateTime?

  // Relations
  transactions Transaction[]

  @@map("users")
}

model Product {
  id              String   @id @default(cuid())
  barcode         String   @unique
  name            String
  description     String?
  price           Float
  cost            Float?
  stockQuantity   Int      @default(0)
  minStockLevel   Int      @default(0)
  categoryId      String?
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  transactionItems TransactionItem[]

  @@map("products")
}

model Transaction {
  id                String   @id @default(cuid())
  transactionNumber String   @unique
  cashierId         String
  totalAmount       Float
  taxAmount         Float    @default(0)
  paymentMethod     String?
  status            String   @default("completed")
  createdAt         DateTime @default(now())

  // Relations
  cashier User              @relation(fields: [cashierId], references: [id])
  items   TransactionItem[]

  @@map("transactions")
}

model TransactionItem {
  id            String @id @default(cuid())
  transactionId String
  productId     String
  quantity      Int
  unitPrice     Float
  totalPrice    Float

  // Relations
  transaction Transaction @relation(fields: [transactionId], references: [id])
  product     Product     @relation(fields: [productId], references: [id])

  @@map("transaction_items")
}

enum UserRole {
  ADMIN
  MANAGER
  CASHIER
}
